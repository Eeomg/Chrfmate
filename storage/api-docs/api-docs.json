{
    "openapi": "3.0.0",
    "info": {
        "title": "Chief-Mate",
        "description": "API documentation for Chief-Mate Application",
        "contact": {
            "name": "Osama Gasser",
            "email": "devosamagasser@gmail.com"
        },
        "license": {
            "name": "Developed by Osama Gasser",
            "url": "https://example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://ciefmate-production.up.railway.app",
            "description": "HTTPS Server"
        },
        {
            "url": "http://127.0.0.1:8000",
            "description": "HTTP Server"
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "operationId": "47eabf0df06a12d888949a765ad37d03",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "17|e6n7vBgUMKDFUzM5NAZoPE8QkJsp0G4K31DDoS40185d2895"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your credentials don't match our records"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process this action, please try again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User registration",
                "operationId": "e6e6fa9f24be2e077081049aec37766e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone",
                                    "password",
                                    "avatar"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0199021098"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "avatar": {
                                        "description": "User avatar image",
                                        "type": "string",
                                        "format": "binary",
                                        "example": "avatar.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process this action, please try again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "delete": {
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "operationId": "a39e2ab9087fa38fce8e291e0b417286",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process this action, please try again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/otp-verification": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify OTP for email verification",
                "operationId": "a485a678b6f5a00b47e208ef7e9573bf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailVerificationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verified successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "This code is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/resend-otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resend OTP for email verification",
                "operationId": "c800ec910a7f4c68d45a65accdf3a115",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP re-sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP re-sent successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/{provider}/redirect": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Redirect to provider for social login",
                "operationId": "1b8d5b35a2e70ec519f19ef9273ffd3e",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "facebook",
                                "github"
                            ]
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to provider's login page"
                    },
                    "400": {
                        "description": "Provider not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Provider not supported"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/{provider}/callback": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Handle provider callback",
                "operationId": "7bb032cc8005438d79f4225db04dc265",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "facebook",
                                "github"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Provider not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Provider not supported"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process this action, please try again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categorie": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a categories of workspace by ID of workspace",
                "operationId": "cc9d8622ecd2d39e26c391bfb7e503ab",
                "responses": {
                    "200": {
                        "description": "List of categories of workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Categories"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/category": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new workspace",
                "operationId": "aa8acee8a7e23071b37eec2731ba6bed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Workspace created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Categories"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/category/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a category by ID",
                "operationId": "a74915bb2b7e75f0d426c907daa3812e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Categories"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "operationId": "5b9014e3745b1de11700d1b8385f66ad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the catgory",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Categories"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "b6992c5b4e3280062e2cff7803b13969",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/equipment": {
            "get": {
                "tags": [
                    "Equipments"
                ],
                "summary": "Get a equipments of workspace by ID of workspace",
                "operationId": "c1192fbe9403cea33ab1d08045c7b911",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type of equipments",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of equipments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Equipments"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/equipments": {
            "post": {
                "tags": [
                    "Equipments"
                ],
                "summary": "Create a new equipment",
                "operationId": "518061473c0f59ebad6172b1a6ea1b3c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EquipmentStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Equipment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Equipment created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Equipments"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/equipment/{id}": {
            "get": {
                "tags": [
                    "Equipments"
                ],
                "summary": "Get a equipment by ID",
                "operationId": "66416138f762d92a37eb177529c8410e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "equipment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Equipments"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Equipment not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Equipments"
                ],
                "summary": "Update a equipment",
                "operationId": "cd450f26bdb5f24060dedcfb2a62d2a8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EquipmentUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Equipments"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Equipment not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Equipments"
                ],
                "summary": "Delete a equipment",
                "operationId": "7fc5dd6df86e5003b1ad8407b6c52fd4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "equipment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "equipment deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "equipment not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/ingredient": {
            "get": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Get a ingredients of workspace by ID of workspace",
                "operationId": "65f7a8cc237260bdd6c473ac40ca9f2c",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type of ingredients",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ingredients retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Ingredients"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Create a new ingredient",
                "operationId": "ee6b6f4e02bd285b327c44ae7c996d35",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngredientStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ingredient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ingredient created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Ingredients"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/ingredient/{id}": {
            "get": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Get a ingredient by ID",
                "operationId": "c756a219bdc40f20221833e4eaa57124",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ingredient retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Ingredients"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ingredient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ingredient not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Update a ingredient",
                "operationId": "103d995b765750825ceb880dbf809c8e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngredientUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ingredient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Ingredients"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ingredient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ingredient not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Delete a ingredient",
                "operationId": "4bad46ccadcaf5aeac5edad2c6718e2e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ingredient deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ingredient deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ingredient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ingredient not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/invitation": {
            "post": {
                "tags": [
                    "Invitations"
                ],
                "summary": "Invite a new workspace",
                "operationId": "88e2df6346242177bf8731bce4b83c3d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InviteMembersRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Member invited successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The invite has been sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email is not valid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "451": {
                        "description": "Unavailable for legal reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 451
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This user isn\\'t free to join your workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/invitation/{id}/accept": {
            "get": {
                "tags": [
                    "Invitations"
                ],
                "summary": "Accept Invite",
                "operationId": "69381e8be6fcf67c0409b426c71216ac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the invitation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invitation accepted, you are now one of the teem"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invitation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invitation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/member": {
            "get": {
                "tags": [
                    "Members"
                ],
                "summary": "Get all members of workspace by ID of workspace",
                "operationId": "b7f544a101cbded61f5f69d2befa91a2",
                "parameters": [
                    {
                        "name": "section_id",
                        "in": "path",
                        "description": "filter members by setcion section",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of members retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/member/{id}": {
            "get": {
                "tags": [
                    "Members"
                ],
                "summary": "Get a specific member by ID",
                "operationId": "8979acbbfa9ecd7eb222fca710060e66",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the member",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Member retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Member not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Member not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Members"
                ],
                "summary": "Update a member",
                "operationId": "385a247a4e722c7398a63f7c994dd972",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the member",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Memeber info.. updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Memeber's info.. updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "rule": [
                                                    "The rule is not valid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Member not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Member not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/member/{id}/fire": {
            "delete": {
                "tags": [
                    "Members"
                ],
                "summary": "Fire a member",
                "operationId": "1c6738d979614fac07f737967d3822a4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the member",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Member fired successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Member has\\'t been one of the teem."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Member not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Member not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/comments": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Create a new section",
                "operationId": "6d82e4baa2a74c0f642eee9430a6ca94",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentnStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Section created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Comment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The comment field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/comments/{id}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get a comments by recipe ID",
                "operationId": "e1c37268f3ed9a5bd6cc6f19cfd06477",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Recipe",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Comment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comments not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comments not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/recipes": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Retrieve all recipes",
                "description": "Get a list of recipes.",
                "operationId": "edf9a2dcd22485d45640e45874e30a5b",
                "responses": {
                    "200": {
                        "description": "List of recipes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RecipeResource"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Create a new recipe",
                "operationId": "createRecipe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "category_id",
                                    "workspace_id",
                                    "status",
                                    "preparation_time",
                                    "calories",
                                    "protein",
                                    "carbs",
                                    "fats",
                                    "cover"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Recipe 1"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A delicious recipe"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "workspace_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "completed"
                                    },
                                    "preparation_time": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "calories": {
                                        "type": "integer",
                                        "example": 200
                                    },
                                    "protein": {
                                        "type": "integer",
                                        "example": 15
                                    },
                                    "carbs": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "fats": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "cover": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "ingredients[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            5,
                                            4
                                        ]
                                    },
                                    "ingredients_quantities[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            2,
                                            3
                                        ]
                                    },
                                    "ingredients_units[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "grams",
                                            "cups"
                                        ]
                                    },
                                    "equipments[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            3,
                                            4
                                        ]
                                    },
                                    "equipments_quantities[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            "1",
                                            "2"
                                        ]
                                    },
                                    "instructions_media[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        },
                                        "example": [
                                            "erik-mclean-bGWVhFY1gH0-unsplash.jpg",
                                            "another-image.jpg"
                                        ]
                                    },
                                    "instructions_timer[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            10,
                                            5
                                        ]
                                    },
                                    "instructions_descriptions[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Chop the onions",
                                            "Boil water"
                                        ]
                                    },
                                    "instructions_order[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Recipe created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/recipes/{id}": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Get a single recipe",
                "description": "Retrieve a specific recipe.",
                "operationId": "825816cf4f9a817c823caed307b3442e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipeResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Update a recipe",
                "description": "Update a recipe.",
                "operationId": "5f598b8cd80b435f11f697d83a6eba31",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "cover",
                                    "preparation_time",
                                    "category_id",
                                    "status"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Recipe 1"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A delicious recipe"
                                    },
                                    "cover": {
                                        "description": "Cover image (jpeg, png, jpg, gif, svg)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "preparation_time": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "calories": {
                                        "type": "integer",
                                        "example": 200
                                    },
                                    "protein": {
                                        "type": "integer",
                                        "example": 15
                                    },
                                    "fats": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "carbs": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "completed",
                                            "draft"
                                        ],
                                        "example": "completed"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "ingredients[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "ingredients_units[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "grams",
                                            "cups",
                                            "pieces"
                                        ]
                                    },
                                    "ingredients_quantities[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "100",
                                            "2",
                                            "3"
                                        ]
                                    },
                                    "equipments[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            5,
                                            6
                                        ]
                                    },
                                    "equipments_quantities[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "1",
                                            "2"
                                        ]
                                    },
                                    "instructions_order[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "instructions_media[]": {
                                        "description": "Instruction media files (jpeg, png, jpg, mp4)",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "instructions_timer[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "10 min",
                                            "5 min"
                                        ]
                                    },
                                    "instructions_descriptions[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Chop the onions",
                                            "Boil water"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Recipe updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Recipe not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Delete a recipe",
                "description": "Delete a recipe.",
                "operationId": "0ab71e0d9115b8d209a5c69a0999c054",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Recipe deleted successfully"
                    },
                    "404": {
                        "description": "Recipe not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/section": {
            "get": {
                "tags": [
                    "Sections"
                ],
                "summary": "Get a sections of workspace by ID of workspace",
                "operationId": "72b2faadb036d8cc35009614922da624",
                "responses": {
                    "200": {
                        "description": "List of sections of workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Sections"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sections"
                ],
                "summary": "Create a new section",
                "operationId": "959f35af58427c6b4132654b7674d264",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SectionStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Section created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Sections"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/section/{id}": {
            "get": {
                "tags": [
                    "Sections"
                ],
                "summary": "Get a section by ID",
                "operationId": "03fef938505c01325804b96ba78ffd72",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the section",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Section retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Sections"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Section not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Sections"
                ],
                "summary": "Update a section",
                "operationId": "d4ce7ef4b59a0964170ec45415d29930",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the section",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SectionUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Section updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Sections"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Section not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sections"
                ],
                "summary": "Delete a section",
                "operationId": "c40ccb2abd36e5b18c68353ca6c0e282",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the section",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Section deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Section deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Section not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/user/profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "operationId": "eb2f86e4f0247c8680c3ca377bd58cd7",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process this action, please try again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/user/update": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user profile",
                "operationId": "c12aee124439a475ec1682f547b8b5a1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "010101010"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "format": "binary",
                                        "example": "image.png"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process this action, please try again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/user/destroy": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user profile",
                "operationId": "f81505fd710d57e69b2547864c5c5bdb",
                "responses": {
                    "200": {
                        "description": "Profile deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process this action, please try again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/warehouse": {
            "get": {
                "tags": [
                    "Warehouse"
                ],
                "summary": "Get a warehouse details of workspace by ID of workspace",
                "operationId": "ebaf3c81ec943f7c8b46b800805cf88e",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "equipment || ingredient",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Contents of warehouse of workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Warehouse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Warehouse"
                ],
                "summary": "Create a new warehouse Inventory",
                "operationId": "0be528b568e2f0d728415ea0bf50a5a3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WarehouseStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "successfully added"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Warehouse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/warehouse/{id}": {
            "put": {
                "tags": [
                    "Warehouse"
                ],
                "summary": "Update a warehouse",
                "operationId": "5da18471ad17d8defff1f2ba20f02ea1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Warehouse",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WarehouseUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Warehouse updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Warehouse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inventory not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Warehouse"
                ],
                "summary": "Delete a Inventory",
                "operationId": "4b518c03f54292e6a970745f3d1e9fb9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Inventory ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inventory deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Inventory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inventory  not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/workspaces": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get all workspaces",
                "operationId": "851fe9807e049419ef7d39d8d4b2c3c7",
                "responses": {
                    "200": {
                        "description": "List of workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Workspace"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Create a new workspace",
                "operationId": "aaf9b77d4749b7474d0d00494558b7f8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkspaceStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Workspace created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/workspaces/{id}": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get a workspace by ID",
                "operationId": "f057678ab83ae2b0088e2d7159207407",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the workspace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workspace retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Update a workspace",
                "operationId": "c190c0a32ee7bd6ec3cb573af594bc28",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the workspace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkspaceUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Workspace updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Delete a workspace",
                "operationId": "976eebced68c0d809c02f8befddbe526",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the workspace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workspace deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "099 2899 634 34"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "avatars/avatar.jpg"
                    }
                },
                "type": "object"
            },
            "Workspace": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Workspace name"
                    },
                    "color": {
                        "type": "string",
                        "example": "blue"
                    },
                    "color_code": {
                        "type": "string",
                        "example": "#0000FF"
                    }
                },
                "type": "object"
            },
            "Categories": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "category title"
                    },
                    "worksapce_id": {
                        "type": "integer",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "Sections": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "section title"
                    },
                    "worksapce_id": {
                        "type": "integer",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "Warehouse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "section title"
                    },
                    "type": {
                        "type": "integer",
                        "example": "equipment || ingredient"
                    }
                },
                "type": "object"
            },
            "Ingredients": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "ingriedent name"
                    },
                    "cover": {
                        "type": "sting",
                        "example": "cover.jpg"
                    },
                    "description": {
                        "type": "sting",
                        "example": "some description to descripe ingredient"
                    },
                    "unit": {
                        "type": "sting",
                        "example": "ml || l || gm || kg || unit"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "12.5 || 11"
                    }
                },
                "type": "object"
            },
            "Equipments": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "ingriedent name"
                    },
                    "cover": {
                        "type": "sting",
                        "example": "cover.jpg"
                    },
                    "description": {
                        "type": "sting",
                        "example": "some description to descripe equipment"
                    },
                    "unit": {
                        "type": "sting",
                        "example": "unit"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "11"
                    }
                },
                "type": "object"
            },
            "RecipeResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Recipe 1"
                    },
                    "description": {
                        "type": "string",
                        "example": "A delicious recipe"
                    },
                    "cover": {
                        "type": "string",
                        "example": "cover.jpg"
                    },
                    "preparation_time": {
                        "description": "Preparation time in minutes",
                        "type": "integer",
                        "example": 30
                    },
                    "calories": {
                        "description": "Calories per serving",
                        "type": "integer",
                        "example": 200
                    },
                    "protein": {
                        "description": "Protein content in grams",
                        "type": "integer",
                        "example": 15
                    },
                    "fats": {
                        "description": "Fat content in grams",
                        "type": "integer",
                        "example": 10
                    },
                    "carbs": {
                        "description": "Carbohydrate content in grams",
                        "type": "integer",
                        "example": 30
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "completed",
                            "draft"
                        ],
                        "example": "completed"
                    },
                    "category_id": {
                        "description": "ID of the associated category",
                        "type": "integer",
                        "example": 2
                    },
                    "workspace_id": {
                        "description": "ID of the workspace",
                        "type": "integer",
                        "example": 1
                    },
                    "ingredients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IngredientResource"
                        }
                    },
                    "equipments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentResource"
                        }
                    },
                    "instructions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstructionResource"
                        }
                    }
                },
                "type": "object"
            },
            "IngredientResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Flour"
                    },
                    "unit": {
                        "type": "string",
                        "example": "grams"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "EquipmentResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Oven"
                    },
                    "cover": {
                        "type": "string",
                        "example": "oven.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "Electric oven for baking"
                    },
                    "unit": {
                        "type": "string",
                        "example": "piece"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "InstructionResource": {
                "properties": {
                    "order": {
                        "description": "Step order in the recipe",
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "type": "string",
                        "example": "Mix the ingredients thoroughly"
                    },
                    "media": {
                        "description": "Image or video file for the instruction",
                        "type": "string",
                        "example": "step1.jpg"
                    },
                    "timer": {
                        "description": "Suggested time for this step",
                        "type": "string",
                        "example": "10 min"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "properties": {
                    "comment": {
                        "type": "string",
                        "example": "Mix the ingredients thoroughly"
                    },
                    "user": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            },
            "EmailVerificationRequest": {
                "required": [
                    "email",
                    "code"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "example@gmail.com"
                    },
                    "code": {
                        "type": "string",
                        "example": "129912"
                    }
                },
                "type": "object"
            },
            "CategoryStoreRequest": {
                "required": [
                    "title",
                    "workspace_id"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "category 1"
                    }
                },
                "type": "object"
            },
            "CategoryUpdateRequest": {
                "required": [
                    "title",
                    "workspace_id"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Category #"
                    }
                },
                "type": "object"
            },
            "EquipmentStoreRequest": {
                "required": [
                    "name",
                    "unit",
                    "quantity",
                    "workspace_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "dish"
                    },
                    "cover": {
                        "type": "binary",
                        "example": "image.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "some decription"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "11"
                    },
                    "warehouse_id": {
                        "description": "ID of the warehouse",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "EquipmentUpdateRequest": {
                "required": [
                    "name",
                    "unit",
                    "quantity",
                    "workspace_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "dish 2"
                    },
                    "cover": {
                        "type": "binary",
                        "example": "image.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "some decription"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "11"
                    }
                },
                "type": "object"
            },
            "IngredientStoreRequest": {
                "required": [
                    "name",
                    "unit",
                    "quantity",
                    "workspace_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "shugar"
                    },
                    "cover": {
                        "type": "binary",
                        "example": "image.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "some decription"
                    },
                    "unit": {
                        "type": "string",
                        "example": "l, ml, g, unit, kg"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "11, 12, 13"
                    },
                    "warehouse_id": {
                        "description": "ID of the warehouse",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "IngredientUpdateRequest": {
                "required": [
                    "name",
                    "unit",
                    "quantity",
                    "workspace_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "shugar"
                    },
                    "cover": {
                        "type": "binary",
                        "example": "image.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "some decription"
                    },
                    "unit": {
                        "type": "string",
                        "example": "l, ml, g, unit, kg"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "11, 12, 13"
                    }
                },
                "type": "object"
            },
            "InviteMembersRequest": {
                "required": [
                    "email",
                    "rule",
                    "section_id",
                    "workspace_id"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "rule": {
                        "type": "string",
                        "example": "Chef, Assistant Chef, Trainee"
                    },
                    "section_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "MemberUpdateRequest": {
                "required": [
                    "rule",
                    "section_id",
                    "workspace_id"
                ],
                "properties": {
                    "rule": {
                        "type": "string",
                        "example": "Chef, Assistant Chef, Trainee"
                    },
                    "section_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "CommentnStoreRequest": {
                "required": [
                    "comment",
                    "recipe_id"
                ],
                "properties": {
                    "comment": {
                        "type": "string",
                        "example": "comment dd "
                    },
                    "recipe_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "RecipeUpdateRequest": {
                "required": [
                    "title",
                    "workspace_id",
                    "description",
                    "cover",
                    "preparation_time",
                    "category_id",
                    "status"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Recipe 1"
                    },
                    "workspace_id": {
                        "description": "ID of the workspace",
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "type": "string",
                        "example": "A delicious recipe"
                    },
                    "cover": {
                        "description": "Image file for the recipe (jpeg, png, jpg, gif, svg)",
                        "type": "string",
                        "format": "binary"
                    },
                    "preparation_time": {
                        "description": "Preparation time in minutes (must be at least 1)",
                        "type": "integer",
                        "example": 30
                    },
                    "calories": {
                        "description": "Calories per serving (optional, must be at least 1)",
                        "type": "integer",
                        "example": 200
                    },
                    "protein": {
                        "description": "Protein content (optional, must be at least 1)",
                        "type": "integer",
                        "example": 15
                    },
                    "fats": {
                        "description": "Fat content (optional, must be at least 1)",
                        "type": "integer",
                        "example": 10
                    },
                    "carbs": {
                        "description": "Carbohydrate content (optional, must be at least 1)",
                        "type": "integer",
                        "example": 30
                    },
                    "status": {
                        "description": "Recipe status (must be either 'completed' or 'draft')",
                        "type": "string",
                        "enum": [
                            "completed",
                            "draft"
                        ],
                        "example": "completed"
                    },
                    "category_id": {
                        "description": "ID of the associated category (must exist in the database)",
                        "type": "integer",
                        "example": 2
                    },
                    "ingredients": {
                        "description": "List of ingredient IDs (optional, must exist in the database)",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "ingredients_units": {
                        "description": "Measurement units for each ingredient (must match ingredient count)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "grams",
                            "cups",
                            "pieces"
                        ]
                    },
                    "ingredients_quantities": {
                        "description": "Quantities for each ingredient (must match ingredient count)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "100",
                            "2",
                            "3"
                        ]
                    },
                    "equipments": {
                        "description": "List of equipment IDs (optional, must exist in the database)",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            5,
                            6
                        ]
                    },
                    "equipments_quantities": {
                        "description": "Quantities for each equipment item (must match equipment count)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "1",
                            "2"
                        ]
                    },
                    "instructions_order": {
                        "description": "Order of instructions (must be unique, required if instructions exist)",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "instructions_media": {
                        "description": "Instruction media files (jpeg, png, jpg for images, mp4 for videos)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "example": [
                            "instruction1.jpg",
                            "step2.mp4"
                        ]
                    },
                    "instructions_timer": {
                        "description": "Timer for each instruction step (must match instructions count)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "10 min",
                            "5 min"
                        ]
                    },
                    "instructions_descriptions": {
                        "description": "Descriptions for each instruction step (must match instructions count)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "Chop the onions",
                            "Boil water"
                        ]
                    }
                },
                "type": "object"
            },
            "SectionStoreRequest": {
                "required": [
                    "title",
                    "workspace_id"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Section #"
                    }
                },
                "type": "object"
            },
            "SectionUpdateRequest": {
                "required": [
                    "title",
                    "workspace_id"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "section 1"
                    }
                },
                "type": "object"
            },
            "WarehouseStoreRequest": {
                "required": [
                    "title",
                    "type",
                    "workspace_id"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "flavours"
                    },
                    "type": {
                        "description": "type of Inventory",
                        "type": "string",
                        "example": "equipment || ingredient"
                    }
                },
                "type": "object"
            },
            "WarehouseUpdateRequest": {
                "required": [
                    "title",
                    "workspace_id"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "flavors"
                    }
                },
                "type": "object"
            },
            "WorkspaceStoreRequest": {
                "required": [
                    "name",
                    "color_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "My Workspace"
                    },
                    "color_id": {
                        "description": "ID of the color",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "WorkspaceUpdateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Updated Workspace Name"
                    },
                    "color_id": {
                        "description": "ID of the color",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication endpoints"
        },
        {
            "name": "Recipes",
            "description": "API Endpoints for managing recipes"
        },
        {
            "name": "User",
            "description": "Endpoints for managing user profile"
        },
        {
            "name": "Workspaces",
            "description": "Endpoints for managing workspaces"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Equipments",
            "description": "Equipments"
        },
        {
            "name": "Ingredients",
            "description": "Ingredients"
        },
        {
            "name": "Invitations",
            "description": "Invitations"
        },
        {
            "name": "Members",
            "description": "Members"
        },
        {
            "name": "Comments",
            "description": "Comments"
        },
        {
            "name": "Sections",
            "description": "Sections"
        },
        {
            "name": "Warehouse",
            "description": "Warehouse"
        }
    ]
}